{"version":3,"sources":["Recently.js","Content.js","Header.js","Searched.js","App.js","serviceWorker.js","index.js"],"names":["RecentItem","props","react_default","a","createElement","Grid","item","xs","Paper","className","classes","paper","onClick","reLoad","name","style","cursor","container","Typography","variant","align","count","withStyles","theme","padding","spacing","typography","divider","margin","data","recent","console","log","Divider","map","i","keyword","key","createMuiTheme","styles","maxWidth","overflow","searchBar","borderBottom","searchInput","fontSize","Object","objectSpread","block","display","addUser","marginRight","contentWrapper","Content","state","query","_this2","this","AppBar","position","color","elevation","Toolbar","alignItems","Search_default","TextField","id","fullWidth","placeholder","InputProps","disableUnderline","value","onChange","e","setState","target","Button","Tooltip","title","IconButton","Refresh_default","src_Recently","React","Component","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","link","textDecoration","&:hover","palette","common","white","button","borderColor","Fragment","component","renderCustomBarLabel","_ref","payload","x","y","width","height","fill","textAnchor","dy","concat","sumOf","arr","result","length","Searched","_this","keywords","pos","neg","sumK","sumP","sumN","componentDidMount","axios","get","then","response","items","alert","catch","f2s","sum","root","img","src","alt","es6","빈도","dataKey","wrapperStyle","backgroundColor","type","label","labelfommater","itemDiv","flexGrow","h5","fontWeight","letterSpacing","primary","light","main","dark","shape","borderRadius","overrides","MuiDrawer","MuiButton","textTransform","contained","boxShadow","&:active","MuiTabs","indicator","borderTopLeftRadius","borderTopRightRadius","MuiTab","defineProperty","minWidth","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","& svg","MuiAvatar","disableRipple","mixins","toolbar","minHeight","drawer","flexShrink","appContent","flex","flexDirection","mainContent","background","introContent","introBox","App","mobileOpen","isSearch","handleDrawerToggle","Axios","ThemeProvider","CssBaseline","src_Header","onDrawerToggle","Container","src_Content","src_Searched","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1bd506b7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper, Typography, Divider } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  paper: {\n    padding: theme.spacing(2)\n  },\n  typography: {\n    padding: theme.spacing(1, 0)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  }\n});\n\nfunction Recently(props) {\n  const { classes } = props;\n\n  const data = props.recent;\n  console.log(data);\n  return (\n    <div>\n      <Typography variant=\"h5\" className={classes.typography}>\n        인기 검색어\n      </Typography>\n      <Divider className={classes.divider} />\n      <Grid container spacing={3}>\n        {data.map((item, i) => {\n          return (\n            <RecentItem\n              classes={classes}\n              name={item.keyword}\n              count={item.count}\n              reLoad={props.reLoad}\n              key={i}\n            />\n          );\n        })}\n      </Grid>\n    </div>\n  );\n}\n\nfunction RecentItem(props) {\n  return (\n    <Grid item xs={6}>\n      <Paper\n        className={props.classes.paper}\n        onClick={() => props.reLoad(props.name)}\n        style={{ cursor: \"pointer\" }}\n      >\n        <Grid container>\n          <Grid item xs={6}>\n            <Typography variant=\"body1\" align=\"left\">\n              {props.name}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body1\" align=\"right\">\n              {props.count}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default withStyles(styles)(Recently);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n// import Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { withStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport Recently from \"./Recently\";\n\nlet theme = createMuiTheme({});\n\ntheme = {\n  ...theme\n};\nconst styles = {\n  paper: {\n    maxWidth: 936,\n    margin: \"auto\",\n    overflow: \"hidden\"\n  },\n  searchBar: {\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\"\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize\n  },\n  block: {\n    display: \"block\"\n  },\n  addUser: {\n    marginRight: theme.spacing(1)\n  },\n  contentWrapper: {\n    margin: \"20px 16px\"\n  }\n};\n\nclass Content extends React.Component {\n  state = {\n    query: \"\"\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Paper className={classes.paper}>\n        <AppBar\n          className={classes.searchBar}\n          position=\"static\"\n          color=\"default\"\n          elevation={0}\n        >\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item>\n                <SearchIcon className={classes.block} color=\"inherit\" />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  id=\"searchKeyword\"\n                  fullWidth\n                  placeholder=\"검색어 입력\"\n                  InputProps={{\n                    disableUnderline: true,\n                    className: classes.searchInput\n                  }}\n                  value={this.state.query}\n                  onChange={e => this.setState({ query: e.target.value })}\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.addUser}\n                  onClick={() => this.props.reLoad(this.state.query)}\n                >\n                  검색\n                </Button>\n                <Tooltip title=\"Reload\">\n                  <IconButton>\n                    <RefreshIcon className={classes.block} color=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.contentWrapper}>\n          <Recently reLoad={this.props.reLoad} recent={this.props.recent} />\n        </div>\n      </Paper>\n    );\n  }\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Content);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst lightColor = \"rgba(255, 255, 255, 0.7)\";\n\nconst styles = theme => ({\n  secondaryBar: {\n    zIndex: 0,\n    padding: theme.spacing(1, 0)\n  },\n  menuButton: {\n    marginLeft: -theme.spacing(1)\n  },\n  iconButtonAvatar: {\n    padding: 4\n  },\n  link: {\n    textDecoration: \"none\",\n    color: lightColor,\n    \"&:hover\": {\n      color: theme.palette.common.white\n    }\n  },\n  button: {\n    borderColor: lightColor\n  }\n});\n\nfunction reLoad() {\n  console.log(\"reLoad\");\n}\n\nfunction Header(props) {\n  const { classes } = props;\n\n  return (\n    <React.Fragment>\n      <AppBar\n        component=\"div\"\n        className={classes.secondaryBar}\n        color=\"primary\"\n        position=\"static\"\n        elevation={0}\n      >\n        <Toolbar>\n          <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item xs>\n              <Typography\n                color=\"inherit\"\n                variant=\"h5\"\n                onClick={reLoad}\n                style={{ cursor: \"pointer\" }}\n              >\n                키워드 분석\n              </Typography>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onDrawerToggle: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\nimport { withStyles, Paper } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport axios from \"axios\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\n\nconst style = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2, 2, 0.5, 2),\n    margin: theme.spacing(2, 2)\n  },\n  img: {\n    width: \"100%\"\n  },\n  divider: {\n    margin: theme.spacing(0, 0, 2, 0)\n  },\n  itemDiv: {\n    margin: theme.spacing(0.5, 0, 1, 1),\n    backgroundColor: \"#C0C0C0\"\n  },\n  item: {\n    margin: theme.spacing(0, 2)\n  }\n});\n\nconst renderCustomBarLabel = ({ payload, x, y, width, height, value }) => {\n  return (\n    <text\n      x={x + width / 2}\n      y={y}\n      fill=\"#666\"\n      textAnchor=\"middle\"\n      dy={-6}\n    >{`${value}`}</text>\n  );\n};\n\nfunction sumOf(arr) {\n  let result = 0;\n  for (let i = 0; i < arr.length; i++) {\n    result = result + arr[i].count;\n  }\n  return result;\n}\n\nclass Searched extends React.Component {\n  state = {\n    query: this.props.query,\n    keywords: [],\n    pos: [],\n    neg: [],\n    sumK: 0,\n    sumP: 0,\n    sumN: 0\n  };\n\n  componentDidMount = () => {\n    axios\n      .get(\"http://168.131.152.94:5000/search/\" + this.state.query)\n      .then(response => {\n        console.log(response.data);\n        if (response.data.get == \"success\") {\n          this.setState({ keywords: response.data.keywords.items });\n          this.setState({ pos: response.data.pos.items });\n          this.setState({ neg: response.data.neg.items });\n          this.setState({ sumK: sumOf(response.data.keywords.items) });\n          this.setState({ sumP: sumOf(response.data.pos.items) });\n          this.setState({ sumN: sumOf(response.data.neg.items) });\n        } else {\n          alert(\"분석을 시작했습니다\\n잠시 뒤에 다시 검색하세요\");\n          // TODO : 첫 화면으로 돌아가기\n        }\n      })\n      .catch(response => alert(response));\n  };\n\n  f2s = (value, sum) => {\n    value = value / sum;\n    return value * 100 + \"%\";\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <div>\n          <AppBar position=\"static\" color=\"default\">\n            <Toolbar>\n              <Typography variant=\"h6\" color=\"inherit\">\n                {this.props.query}\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <div>\n          <Paper className={classes.paper}>\n            <img\n              className={classes.img}\n              src={\"http://168.131.152.94:5000/searchimg/filename.png\"}\n              alt=\"Wordcloud\"\n            />\n          </Paper>\n        </div>\n        <div>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h5\">단어별 빈도수</Typography>\n            <Divider className={classes.divider} />\n            <BarChart\n              width={800}\n              height={200}\n              data={this.state.keywords.map((item, i) => {\n                return {\n                  name: item.name,\n                  빈도: item.count / this.state.sumK\n                };\n              })}\n            >\n              <XAxis dataKey=\"name\" />\n              {/* <YAxis /> */}\n              <Tooltip wrapperStyle={{ width: 100, backgroundColor: \"#ccc\" }} />\n              {/* <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/> */}\n              <Bar\n                type=\"monotone\"\n                dataKey=\"빈도\"\n                fill=\"#009BE4\"\n                label={renderCustomBarLabel}\n                labelfommater={(value, name, props) => {\n                  return [\"formatted value\", \"formatted name\"];\n                }}\n              />\n            </BarChart>\n          </Paper>\n        </div>\n        <div>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h5\">Keywords</Typography>\n                <Divider className={classes.divider} />\n                <Grid container spacing={1}>\n                  {this.state.keywords.map((item, i) => {\n                    return (\n                      <Grid item xs={6}>\n                        <Grid container>\n                          <Grid item xs={6}>\n                            <Typography\n                              className={classes.item}\n                              variant=\"body1\"\n                              align=\"left\"\n                            >\n                              {item.name}\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <Typography\n                              className={classes.item}\n                              variant=\"body1\"\n                              align=\"right\"\n                            >\n                              {item.count > 0\n                                ? this.f2s(item.count, this.state.sumK)\n                                : \"0%\"}\n                            </Typography>\n                          </Grid>\n                        </Grid>\n                        <Divider className={classes.itemDiv} />\n                      </Grid>\n                    );\n                  })}\n                </Grid>\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h5\">POS</Typography>\n                <Divider className={classes.divider} />\n                {this.state.pos.map((item, i) => {\n                  return (\n                    <Grid item xs={12}>\n                      <Typography\n                        className={classes.item}\n                        variant=\"body1\"\n                        align=\"left\"\n                      >\n                        {item}\n                      </Typography>\n                      <Divider className={classes.itemDiv} />\n                    </Grid>\n                  );\n                })}\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h5\">NEG</Typography>\n                <Divider className={classes.divider} />\n                {this.state.neg.map((item, i) => {\n                  return (\n                    <Grid item xs={12}>\n                      <Typography\n                        className={classes.item}\n                        variant=\"body1\"\n                        align=\"left\"\n                      >\n                        {item}\n                      </Typography>\n                      <Divider className={classes.itemDiv} />\n                    </Grid>\n                  );\n                })}\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style)(Searched);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createMuiTheme, withStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Content from \"./Content\";\nimport Header from \"./Header\";\nimport { Container } from \"@material-ui/core\";\nimport Searched from \"./Searched\";\nimport Axios from \"axios\";\n\nlet theme = createMuiTheme({\n  typography: {\n    h5: {\n      fontWeight: 500,\n      fontSize: 26,\n      letterSpacing: 0.5\n    }\n  },\n  palette: {\n    primary: {\n      light: \"#63ccff\",\n      main: \"#009be5\",\n      dark: \"#006db3\"\n    }\n  },\n  shape: {\n    borderRadius: 8\n  }\n});\n\ntheme = {\n  ...theme,\n  overrides: {\n    MuiDrawer: {\n      paper: {\n        backgroundColor: \"#18202c\"\n      }\n    },\n    MuiButton: {\n      label: {\n        textTransform: \"none\"\n      },\n      contained: {\n        boxShadow: \"none\",\n        \"&:active\": {\n          boxShadow: \"none\"\n        }\n      }\n    },\n    MuiTabs: {\n      root: {\n        marginLeft: theme.spacing(1)\n      },\n      indicator: {\n        height: 3,\n        borderTopLeftRadius: 3,\n        borderTopRightRadius: 3,\n        backgroundColor: theme.palette.common.white\n      }\n    },\n    MuiTab: {\n      root: {\n        textTransform: \"none\",\n        margin: \"0 16px\",\n        minWidth: 0,\n        padding: 0,\n        [theme.breakpoints.up(\"md\")]: {\n          padding: 0,\n          minWidth: 0\n        }\n      }\n    },\n    MuiIconButton: {\n      root: {\n        padding: theme.spacing(1)\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        borderRadius: 4\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: \"#404854\"\n      }\n    },\n    MuiListItemText: {\n      primary: {\n        fontWeight: theme.typography.fontWeightMedium\n      }\n    },\n    MuiListItemIcon: {\n      root: {\n        color: \"inherit\",\n        marginRight: 0,\n        \"& svg\": {\n          fontSize: 20\n        }\n      }\n    },\n    MuiAvatar: {\n      root: {\n        width: 32,\n        height: 32\n      }\n    }\n  },\n  props: {\n    MuiTab: {\n      disableRipple: true\n    }\n  },\n  mixins: {\n    ...theme.mixins,\n    toolbar: {\n      minHeight: 48\n    }\n  }\n};\n\nconst drawerWidth = 256;\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    minHeight: \"100vh\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appContent: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  mainContent: {\n    flex: 1,\n    padding: \"48px 36px 0\",\n    background: \"#eaeff1\"\n  },\n  introContent: {\n    padding: theme.spacing(3, 2)\n  },\n  introBox: {\n    padding: theme.spacing(0, 0, 5, 0)\n  }\n};\n\nclass App extends React.Component {\n  state = {\n    mobileOpen: false,\n    get: \"None\",\n    query: \"\",\n    isSearch: 0,\n    recent: []\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  componentDidMount = () => {\n    Axios.get(\"http://168.131.152.94:5000/popular\")\n      .then(response => {\n        console.log(response);\n        this.setState({ recent: response.data.keywords });\n      })\n      .catch(response => alert(response));\n  };\n\n  reLoad = query => {\n    if (query == \"\") return;\n    this.setState({ isSearch: 1 });\n    this.setState({ query: query });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <div className={classes.appContent}>\n            <Header onDrawerToggle={this.handleDrawerToggle} />\n            {this.state.isSearch == 0 ? (\n              <main className={classes.mainContent}>\n                <Container maxWidth=\"sm\" className={classes.introBox}>\n                  <Paper className={classes.introContent}>\n                    <Typography variant=\"h5\" component=\"h5\" align=\"center\">\n                      전 세계 사용자들의 관심 동향을 살펴보세요\n                    </Typography>\n                  </Paper>\n                </Container>\n                <Content reLoad={this.reLoad} recent={this.state.recent} />\n              </main>\n            ) : (\n              <Searched query={this.state.query} />\n            )}\n          </div>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}